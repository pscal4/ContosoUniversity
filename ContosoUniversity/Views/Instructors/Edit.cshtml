@model ContosoUniversity.Models.Instructor

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>Instructor</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="ID" />
        <div class="form-group">
            <label asp-for="LastName" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="FirstMidName" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="FirstMidName" class="form-control" />
                <span asp-validation-for="FirstMidName" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="HireDate" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="HireDate" class="form-control" />
                <span asp-validation-for="HireDate" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="OfficeAssignment.Location" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="OfficeAssignment.Location" class="form-control" />
                <span asp-validation-for="OfficeAssignment.Location" class="text-danger" />
            </div>
        </div>
        @*This code creates an HTML table that has three columns.
        In each column is a check box followed by a caption that consists of the course number and title.
        The check boxes all have the same name ("selectedCourses"), which informs the model binder that
        they are to be treated as a group. The value attribute of each check box is set to the value of CourseID.
        When the page is posted, the model binder passes an array to the controller that consists of the CourseID
        values for only the check boxes which are selected.
        Note:  The approach taken here to edit instructor course data works well when there is a limited number of courses. 
               For collections that are much larger, a different UI and a different updating method would be required.*@
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <table>
            <tr>
                @{
                    int cnt = 0;
                    List<ContosoUniversity.Models.SchoolViewModels.AssignedCourseData> courses = ViewBag.Courses;

                    foreach (var course in courses)
                    {
                        if (cnt++ % 3 == 0)
                        {
                            @:</tr><tr>
                        }
                        @:<td>
                            <input type="checkbox"
                                   name="selectedCourses"
                                   value="@course.CourseID"
                                   @(Html.Raw(course.Assigned ? "checked=\"checked\"" : "")) />
                                   @course.CourseID @:  @course.Title
                        @:</td>
                    }
                    @:</tr>
                }
        </table>
    </div>
</div>        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
